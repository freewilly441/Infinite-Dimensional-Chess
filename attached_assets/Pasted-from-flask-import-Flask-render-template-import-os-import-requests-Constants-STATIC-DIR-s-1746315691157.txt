from flask import Flask, render_template
import os
import requests

# Constants
STATIC_DIR = "static"
TEMPLATES_DIR = "templates"
THREE_JS_URL = "https://cdn.jsdelivr.net/npm/three@0.149.0/build/three.min.js"
THREE_JS_LOCAL = os.path.join(STATIC_DIR, "three.min.js")

# Ensure directories exist
os.makedirs(STATIC_DIR, exist_ok=True)
os.makedirs(TEMPLATES_DIR, exist_ok=True)

# Download Three.js if not already there
if not os.path.exists(THREE_JS_LOCAL):
    print("Downloading Three.js...")
    r = requests.get(THREE_JS_URL)
    with open(THREE_JS_LOCAL, "wb") as f:
        f.write(r.content)
else:
    print("Three.js already exists.")

# Save HTML template
HTML_CONTENT = """
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Three.js Cube</title>
  <style>
    body { margin: 0; overflow: hidden; background: #222; }
    canvas { display: block; }
  </style>
</head>
<body>
  <script src="/static/three.min.js"></script>
  <script>
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ antialias: true });
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.body.appendChild(renderer.domElement);

    const geometry = new THREE.BoxGeometry();
    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });
    const cube = new THREE.Mesh(geometry, material);
    scene.add(cube);

    camera.position.z = 5;

    function animate() {
      requestAnimationFrame(animate);
      cube.rotation.x += 0.01;
      cube.rotation.y += 0.01;
      renderer.render(scene, camera);
    }
    animate();
  </script>
</body>
</html>
"""

with open(os.path.join(TEMPLATES_DIR, "index.html"), "w", encoding="utf-8") as f:
    f.write(HTML_CONTENT)

# Flask app
app = Flask(__name__, static_folder=STATIC_DIR, template_folder=TEMPLATES_DIR)

@app.route("/")
def index():
    return render_template("index.html")

# Run server
if __name__ == "__main__":
    import os
    port = int(os.environ.get("PORT", 5000))
    app.run(debug=False, host="0.0.0.0", port=port)
